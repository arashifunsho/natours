{"mappings":"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","sources":["public/js/alerts.js","public/js/updateSettings.js","public/js/index.js","public/js/mapbox.js","public/js/login.js"],"sourcesContent":["//type is success or error\n\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\nexport const showAlert = (type, msg, timeout = 1000) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, timeout);\n};\n","import { showAlert } from './alerts';\n\n//type is either password or data\n//data is the data object\nexport const updateSettings = async (type, data) => {\n  const dt = { ...data };\n  let options = { method: 'PATCH' };\n  try {\n    let url = 'http://localhost:3000/api/v1/users/';\n    if (type === 'data') {\n      url += 'updateMe';\n      let form = new FormData();\n      form.append('name', dt.name);\n      form.append('email', dt.email);\n      form.append('photo', dt.photo);\n      options.body = form;\n    } else {\n      url += 'updatePassword';\n      options.headers = { 'Content-Type': 'application/json' };\n      options.body = JSON.stringify(dt);\n    }\n\n    let response = await fetch(url, options);\n    if (!response.ok) throw response;\n    let data = await response.json();\n\n    if (data.status === 'success') {\n      showAlert('success', `Updated User ${type} successfully`, 2000);\n    }\n  } catch (err) {\n    err.text().then((errorMessage) => {\n      showAlert('error', JSON.parse(errorMessage).message, 5000);\n    });\n  }\n};\n","import { login, logout } from './login';\nimport { displayMap } from './mapbox';\nimport { updateSettings } from './updateSettings';\n\nconst mapBox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPswForm = document.querySelector('.form-user-settings');\nconst logoutBtn = document.querySelector('.nav__el--logout');\n\nif (mapBox) {\n  const locs = JSON.parse(mapBox.dataset.locations);\n  displayMap(locs);\n}\n\nif (loginForm) {\n  loginForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n}\n\nif (logoutBtn) logoutBtn.addEventListener('click', logout);\n\nif (userDataForm) {\n  userDataForm.addEventListener('submit', async function (e) {\n    if (!e.target.classList.contains('form-user-data')) {\n      return;\n    }\n    e.preventDefault();\n    document.querySelector('.btn--save-settings').textContent = 'UPDATING...';\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const photo = document.getElementById('photo').files[0];\n    await updateSettings('data', { name, email, photo });\n    document.querySelector('.btn--save-settings').textContent = 'SAVE SETTINGS';\n    location.reload(true);\n  });\n}\n\nif (userPswForm) {\n  userPswForm.addEventListener('submit', async function (e) {\n    // guard to check if different form submitted\n    if (!e.target.classList.contains('form-user-settings')) {\n      return;\n    }\n    e.preventDefault();\n    document.querySelector('.btn--save-password').textContent = 'UPDATING...';\n    const oldPassword = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await updateSettings('password', {\n      oldPassword,\n      password,\n      passwordConfirm,\n    });\n\n    document.querySelector('.btn--save-password').textContent = 'SAVE PASSWORD';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n}\n","export const displayMap = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoibjI2dDI3NCIsImEiOiJjbDB1MWc2cHcwaTU4M2pueWFtb2luM210In0.AP8PK2VmZP0_PGKF8hkIpA';\n  const map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/n26t274/cl0u2ygzj005315p55cds3i6s',\n    scrollZoom: false,\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n  locations.forEach((loc) => {\n    //create marker\n    const el = document.createElement('div');\n    el.className = 'marker';\n\n    //add marker\n    new mapboxgl.Marker({\n      element: el,\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .addTo(map);\n\n    //add popup\n    new mapboxgl.Popup({\n      offset: 30,\n    })\n      .setLngLat(loc.coordinates)\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\n      .addTo(map);\n\n    //extend map bounds to include current location\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 100,\n      left: 100,\n      right: 100,\n    },\n  });\n};\n","import { showAlert } from './alerts';\n\nexport const login = async (email, password) => {\n  try {\n    const response = await fetch('http://localhost:3000/api/v1/users/login', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    if (!response.ok) throw response;\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 500);\n      showAlert('success', 'Logged in successfully');\n    }\n  } catch (err) {\n    err.text().then((errorMessage) => {\n      showAlert('error', JSON.parse(errorMessage).message, 5000);\n    });\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const response = await fetch('http://localhost:3000/api/v1/users/logout', {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n      },\n    });\n    if (!response.ok) throw response;\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      window.location.replace('/');\n      showAlert('success', 'Logged out successfully', 1000);\n    }\n  } catch (e) {\n    showAlert('error', 'Error logging out! Try again.');\n  }\n};\n"],"names":["$96e8db951d5efa7e$export$5a81baf3e1f8b5bb","el","document","querySelector","parentElement","removeChild","$96e8db951d5efa7e$export$e2ed28791945543d","type","msg","timeout","markup","insertAdjacentHTML","window","setTimeout","$24f2df37f9562c83$export$81acc09c7bdb4525","async","data","dt","options","method","url","form","FormData","append","name","email","photo","body","headers","JSON","stringify","response","fetch","ok","json","status","err","text","then","errorMessage","parse","message","$db3f52e10f77e4fb$var$mapBox","getElementById","$db3f52e10f77e4fb$var$loginForm","$db3f52e10f77e4fb$var$userDataForm","$db3f52e10f77e4fb$var$userPswForm","$db3f52e10f77e4fb$var$logoutBtn","locations","mapboxgl","accessToken","map","Map","container","style","scrollZoom","bounds","LngLatBounds","forEach","loc","createElement","className","Marker","element","anchor","setLngLat","coordinates","addTo","Popup","offset","setHTML","day","description","extend","fitBounds","padding","top","bottom","left","right","$44eb71714d9af19b$export$976c4dce80bbf3f7","dataset","addEventListener","e","preventDefault","password","location","assign","$1db71610531e5aaf$export$4a142f624dd0fa8","value","replace","target","classList","contains","textContent","files","reload","oldPassword","passwordConfirm"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}