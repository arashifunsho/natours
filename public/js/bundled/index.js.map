{"mappings":"AAEO,MAAMA,EAAS,KACpB,MAAMC,EAAKC,SAASC,cAAa,UAC7BF,GAAIA,EAAGG,cAAcC,YAAYJ,IAE1BK,EAAS,CAAIC,EAAMC,EAAKC,EAAU,OAC7CT,IACA,MAAMU,EAAM,4BAA+BH,MAASC,UACpDN,SAASC,cAAa,QAASQ,mBAAkB,aAAeD,GAChEE,OAAOC,WAAWb,EAAWS,ICNzBK,EAASZ,SAASa,eAAc,OAChCC,EAAYd,SAASC,cAAa,gBAClCc,EAAef,SAASC,cAAa,mBACrCe,EAAYhB,SAASC,cAAa,oBAExC,GAAIW,EAAQ,CCTW,CAAIK,IACzBC,SAASC,YAAW,4FAEpB,MAAMC,EAAM,IAAIF,SAASG,IAAG,CAC1BC,UAAS,MACTC,MAAK,oDACLC,YAAY,IAGRC,EAAS,IAAIP,SAASQ,aAC5BT,EAAUU,SAASC,IAEjB,MAAM7B,EAAKC,SAAS6B,cAAa,OACjC9B,EAAG+B,UAAS,SAGZ,IAAIZ,SAASa,OAAM,CACjBC,QAASjC,EACTkC,OAAM,WAELC,UAAUN,EAAIO,aACdC,MAAMhB,GAGT,IAAIF,SAASmB,MAAK,CAChBC,OAAQ,KAEPJ,UAAUN,EAAIO,aACdI,QAAO,UAAWX,EAAIY,QAAQZ,EAAIa,mBAClCL,MAAMhB,GAGTK,EAAOiB,OAAOd,EAAIO,gBAGpBf,EAAIuB,UAAUlB,EAAM,CAClBmB,QAAO,CACLC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,MAAO,QD7BXC,CADaC,KAAKC,MAAMvC,EAAOwC,QAAQnC,YAIrCH,GACFA,EAAUuC,iBAAgB,UAAS,SAAYC,GAC7CA,EAAEC,iBEdYC,OAAUC,EAAOC,SAE/B,MAAMC,QAAiBC,MAAK,2CAA2C,CACrEC,OAAM,OACNC,QAAO,gBACS,oBAEhBC,KAAMb,KAAKc,UAAS,OAAGP,WAAOC,MAEhC,IAAKC,EAASM,GAAI,MAAMN,EAGT,mBAFIA,EAASO,QAEnBC,SACPzD,OAAOC,YAAU,KACfyD,SAASC,OAAM,OACd,KACHjE,EAAS,UAAU,2BAEtB,MAAQkE,GACPA,EAAIC,OAAOC,MAAMC,IACfrE,EAAS,QAAU8C,KAAKC,MAAMsB,GAAcC,QAAS,UFHvDC,CAFc3E,SAASa,eAAc,SAAU+D,MAC9B5E,SAASa,eAAc,YAAa+D,UAKrD5D,GAAWA,EAAUqC,iBAAgB,SEItBG,cAEf,MAAMG,QAAiBC,MAAK,4CAA4C,CACtEC,OAAM,MACNC,QAAO,gBACS,sBAGlB,IAAKH,EAASM,GAAI,MAAMN,EAGT,mBAFIA,EAASO,QAEnBC,SACPzD,OAAO0D,SAASS,QAAO,KACvBzE,EAAS,UAAU,0BAA6B,MAEnD,MAAQkD,GACPlD,EAAS,QAAQ,qCFlBjBW,GACFA,EAAasC,iBAAgB,UAAS,SAAYC,GAChDA,EAAEC,iBGzBiBC,OAAUsB,EAAMrB,SAEnC,MAAME,QAAiBC,MAAK,8CACmB,CAE3CC,OAAM,QACNC,QAAO,gBACS,oBAEhBC,KAAMb,KAAKc,UAAS,MAAGc,QAAMrB,MAGjC,IAAKE,EAASM,GAAI,MAAMN,EAGT,mBAFIA,EAASO,QAEnBC,SACPzD,OAAO0D,SAASW,QAAO,GACvB3E,EAAS,UAAU,iCAAoC,MAE1D,MAAQkE,GACPA,EAAIC,OAAOC,MAAMC,IACfrE,EAAS,QAAU8C,KAAKC,MAAMsB,GAAcC,QAAS,UHOvDM,CAFahF,SAASa,eAAc,QAAS+D,MAC/B5E,SAASa,eAAc,SAAU+D","sources":["public/js/alerts.js","public/js/index.js","public/js/mapbox.js","public/js/login.js","public/js/updateSettings.js"],"sourcesContent":["//type is success or error\n\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\nexport const showAlert = (type, msg, timeout = 1000) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, timeout);\n};\n","import { login, logout } from './login';\nimport { displayMap } from './mapbox';\nimport { updateData } from './updateSettings';\n\nconst mapBox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst userDataForm = document.querySelector('.form-user-data');\nconst logoutBtn = document.querySelector('.nav__el--logout');\n\nif (mapBox) {\n  const locs = JSON.parse(mapBox.dataset.locations);\n  displayMap(locs);\n}\n\nif (loginForm) {\n  loginForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n}\n\nif (logoutBtn) logoutBtn.addEventListener('click', logout);\n\nif (userDataForm) {\n  userDataForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    updateData(name, email);\n  });\n}\n","export const displayMap = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoibjI2dDI3NCIsImEiOiJjbDB1MWc2cHcwaTU4M2pueWFtb2luM210In0.AP8PK2VmZP0_PGKF8hkIpA';\n  const map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/n26t274/cl0u2ygzj005315p55cds3i6s',\n    scrollZoom: false,\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n  locations.forEach((loc) => {\n    //create marker\n    const el = document.createElement('div');\n    el.className = 'marker';\n\n    //add marker\n    new mapboxgl.Marker({\n      element: el,\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .addTo(map);\n\n    //add popup\n    new mapboxgl.Popup({\n      offset: 30,\n    })\n      .setLngLat(loc.coordinates)\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\n      .addTo(map);\n\n    //extend map bounds to include current location\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 100,\n      left: 100,\n      right: 100,\n    },\n  });\n};\n","import { showAlert } from './alerts';\n\nexport const login = async (email, password) => {\n  try {\n    const response = await fetch('http://localhost:3000/api/v1/users/login', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    if (!response.ok) throw response;\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 500);\n      showAlert('success', 'Logged in successfully');\n    }\n  } catch (err) {\n    err.text().then((errorMessage) => {\n      showAlert('error', JSON.parse(errorMessage).message, 5000);\n    });\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const response = await fetch('http://localhost:3000/api/v1/users/logout', {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n      },\n    });\n    if (!response.ok) throw response;\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      window.location.replace('/');\n      showAlert('success', 'Logged out successfully', 1000);\n    }\n  } catch (e) {\n    showAlert('error', 'Error logging out! Try again.');\n  }\n};\n","import { showAlert } from './alerts';\n\nexport const updateData = async (name, email) => {\n  try {\n    const response = await fetch(\n      'http://localhost:3000/api/v1/users/updateMe',\n      {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({ name, email }),\n      }\n    );\n    if (!response.ok) throw response;\n    const data = await response.json();\n\n    if (data.status === 'success') {\n      window.location.reload(true);\n      showAlert('success', 'Updated User data successfully', 2000);\n    }\n  } catch (err) {\n    err.text().then((errorMessage) => {\n      showAlert('error', JSON.parse(errorMessage).message, 5000);\n    });\n  }\n};\n"],"names":["$96e8db951d5efa7e$export$5a81baf3e1f8b5bb","el","document","querySelector","parentElement","removeChild","$96e8db951d5efa7e$export$e2ed28791945543d","type","msg","timeout","markup","insertAdjacentHTML","window","setTimeout","$db3f52e10f77e4fb$var$mapBox","getElementById","$db3f52e10f77e4fb$var$loginForm","$db3f52e10f77e4fb$var$userDataForm","$db3f52e10f77e4fb$var$logoutBtn","locations","mapboxgl","accessToken","map","Map","container","style","scrollZoom","bounds","LngLatBounds","forEach","loc","createElement","className","Marker","element","anchor","setLngLat","coordinates","addTo","Popup","offset","setHTML","day","description","extend","fitBounds","padding","top","bottom","left","right","$44eb71714d9af19b$export$976c4dce80bbf3f7","JSON","parse","dataset","addEventListener","e","preventDefault","async","email","password","response","fetch","method","headers","body","stringify","ok","json","status","location","assign","err","text","then","errorMessage","message","$1db71610531e5aaf$export$4a142f624dd0fa8","value","replace","name","reload","$24f2df37f9562c83$export$f587e33963eab9f1"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}